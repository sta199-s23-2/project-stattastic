[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Team member 1: Anna Seaman, Grad: May, 2025, Major: Health Policy and Management, Minor: Chemistry & Medicine Literature and Culture\nTeam member 2: Jake Rosen, Grad: May, 2024, Major: Computer Science, Certificate: Innovation and Entrepreneurship\nTeam member 3: Ariana Matarangas, Grad: May, 2025, Major: Neuroscience, Minor: Chemistry.\nTeam member 4: Mikaela Lipp, Grad: May 2025, Major: Neuroscience, Minor: Chemistry."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "TEAM NAME",
    "section": "",
    "text": "Add project abstract here."
  },
  {
    "objectID": "proposal.html",
    "href": "proposal.html",
    "title": "Spotify, Sports, and Soup",
    "section": "",
    "text": "library(tidyverse)"
  },
  {
    "objectID": "proposal.html#introduction-and-data",
    "href": "proposal.html#introduction-and-data",
    "title": "Spotify, Sports, and Soup",
    "section": "Introduction and data",
    "text": "Introduction and data\n\nIdentify the source of the data.\n\nThis data set comes from Spotify via the spotifyr package.\n\nState when and how it was originally collected (by the original data curator, not necessarily how you found the data).\n\nThe data set was authored by Charlie Thompson, Josiah Parry, Donal Phipps, and Tom Wolff to make it easier to get data or general metadata on songs.\n\nWrite a brief description of the observations.\n\nThis dataset contains about 5,000 songs from 6 main music categories (EDM, Latin, Pop, R&B, Rap, and Rock). For each song there contains general information such as the songs album, artist, release data, but also more interesting statistics on danceability, energy, and popularity."
  },
  {
    "objectID": "proposal.html#research-question",
    "href": "proposal.html#research-question",
    "title": "Spotify, Sports, and Soup",
    "section": "Research question",
    "text": "Research question\n\nA well formulated research question. (You may include more than one research question if you want to receive feedback on different ideas for your project. However, one per data set is required.)\n\nWhich combination of variables would be the best predictor of genre?\nHow does danceability affect popularity of songs of the Latin genre? How about for the Rap genre? Which genre does danceability matter the most when determining popularity?\n\nA description of the research topic along with a concise statement of your hypotheses on this topic.\n\nOur hypothesis is that in the end there will need to be different variables used to calculate likelihood of genre’s but for one general predictor I’d imagine that instrumentalness and danceability would be the best combination to determine.\nFor the second question, I believe that danceability will contribute a larger amount toward popularity for Latin music than Rap music. I also believe that danceability contributes the most to latin music overall.\n\nIdentify the types of variables in your research question. Categorical? Quantitative?\n\nThere is categorical data that explains more general information about the song such as the album name, artist name, genre, but there is also a lot of quantitative data that measures features of the song like danceability, energy, and loudness."
  },
  {
    "objectID": "proposal.html#literature",
    "href": "proposal.html#literature",
    "title": "Spotify, Sports, and Soup",
    "section": "Literature",
    "text": "Literature\n\nFind one published credible article on the topic you are interested in researching.\n\nhttps://www.analyticssteps.com/blogs/how-spotify-using-big-data\n\nProvide a one paragraph summary about the article.\n\nThis article provides insight into how Spotify uses its data to provide a better experience for its users. The three main ways Spotify uses data are to develop personalized content, digitize the user’s taste, enhance marketing through targeted ads, continuously update its system, and create Spotify wrapped. Spotify has not claimed a spot in an incredibly competitive industry but has beaten impressive competitors such as Apple and Amazon due to its reliance on data to provide users with music and content they know they will enjoy.\n\nIn 1-2 sentences, explain how your research question builds on / is different than the article you have cited.\n\nSome of our research questions focus on how different factors affect popularity. This question is critical to consider because if we can adequately predict popularity, then, similar to Spotify, we may be able to predict which songs people will like as soon as they’re released."
  },
  {
    "objectID": "proposal.html#glimpse-of-data",
    "href": "proposal.html#glimpse-of-data",
    "title": "Spotify, Sports, and Soup",
    "section": "Glimpse of data",
    "text": "Glimpse of data\n\nspotify_songs <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-21/spotify_songs.csv')\n\nRows: 32833 Columns: 23\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (10): track_id, track_name, track_artist, track_album_id, track_album_na...\ndbl (13): track_popularity, danceability, energy, key, loudness, mode, speec...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ntuesdata <- tidytuesdayR::tt_load('2020-01-21') \n\n--- Compiling #TidyTuesday Information for 2020-01-21 ----\n--- There is 1 file available ---\n--- Starting Download ---\n\n\n\n    Downloading file 1 of 1: `spotify_songs.csv`\n\n\n--- Download complete ---\n\ntuesdata <- tidytuesdayR::tt_load(2020, week = 4)\n\n--- Compiling #TidyTuesday Information for 2020-01-21 ----\n--- There is 1 file available ---\n--- Starting Download ---\n\n\n\n    Downloading file 1 of 1: `spotify_songs.csv`\n\n\n--- Download complete ---\n\nspotify_songs <- tuesdata$spotify_songs\n\nglimpse(spotify_songs)\n\nRows: 32,833\nColumns: 23\n$ track_id                 <chr> \"6f807x0ima9a1j3VPbc7VN\", \"0r7CVbZTWZgbTCYdfa…\n$ track_name               <chr> \"I Don't Care (with Justin Bieber) - Loud Lux…\n$ track_artist             <chr> \"Ed Sheeran\", \"Maroon 5\", \"Zara Larsson\", \"Th…\n$ track_popularity         <dbl> 66, 67, 70, 60, 69, 67, 62, 69, 68, 67, 58, 6…\n$ track_album_id           <chr> \"2oCs0DGTsRO98Gh5ZSl2Cx\", \"63rPSO264uRjW1X5E6…\n$ track_album_name         <chr> \"I Don't Care (with Justin Bieber) [Loud Luxu…\n$ track_album_release_date <chr> \"2019-06-14\", \"2019-12-13\", \"2019-07-05\", \"20…\n$ playlist_name            <chr> \"Pop Remix\", \"Pop Remix\", \"Pop Remix\", \"Pop R…\n$ playlist_id              <chr> \"37i9dQZF1DXcZDD7cfEKhW\", \"37i9dQZF1DXcZDD7cf…\n$ playlist_genre           <chr> \"pop\", \"pop\", \"pop\", \"pop\", \"pop\", \"pop\", \"po…\n$ playlist_subgenre        <chr> \"dance pop\", \"dance pop\", \"dance pop\", \"dance…\n$ danceability             <dbl> 0.748, 0.726, 0.675, 0.718, 0.650, 0.675, 0.4…\n$ energy                   <dbl> 0.916, 0.815, 0.931, 0.930, 0.833, 0.919, 0.8…\n$ key                      <dbl> 6, 11, 1, 7, 1, 8, 5, 4, 8, 2, 6, 8, 1, 5, 5,…\n$ loudness                 <dbl> -2.634, -4.969, -3.432, -3.778, -4.672, -5.38…\n$ mode                     <dbl> 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, …\n$ speechiness              <dbl> 0.0583, 0.0373, 0.0742, 0.1020, 0.0359, 0.127…\n$ acousticness             <dbl> 0.10200, 0.07240, 0.07940, 0.02870, 0.08030, …\n$ instrumentalness         <dbl> 0.00e+00, 4.21e-03, 2.33e-05, 9.43e-06, 0.00e…\n$ liveness                 <dbl> 0.0653, 0.3570, 0.1100, 0.2040, 0.0833, 0.143…\n$ valence                  <dbl> 0.518, 0.693, 0.613, 0.277, 0.725, 0.585, 0.1…\n$ tempo                    <dbl> 122.036, 99.972, 124.008, 121.956, 123.976, 1…\n$ duration_ms              <dbl> 194754, 162600, 176616, 169093, 189052, 16304…"
  },
  {
    "objectID": "proposal.html#introduction-and-data-1",
    "href": "proposal.html#introduction-and-data-1",
    "title": "Spotify, Sports, and Soup",
    "section": "Introduction and data",
    "text": "Introduction and data\n\nIdentify the source of the data.\n\nThe data comes from the College Sports Budget from Tidy Tuesday.\n\nState when and how it was originally collected (by the original data curator, not necessarily how you found the data).\n\nThe data was originally collected by the Equity in Athletics Data Analysis database and originally from this NPR article: https://www.npr.org/2021/10/27/1049530975/ncaa-spends-more-on-mens-sports-report-reveals\n\nWrite a brief description of the observations.\n\nThe dataset looks at every collegiate sports program and their teams, including data for their men and women’s teams. The observations are broken down by participation numbers for both men and female teams in each sport in the program, the division of the program (DI vs. DII vs. DIII), and the expenditure values of the womens vs. mens programs."
  },
  {
    "objectID": "proposal.html#research-question-1",
    "href": "proposal.html#research-question-1",
    "title": "Spotify, Sports, and Soup",
    "section": "Research question",
    "text": "Research question\n\nA well formulated research question. (You may include more than one research question if you want to receive feedback on different ideas for your project. However, one per data set is required.)\n\nAre there expenditure inequities in college sports across divisions (I vs. II vs. III) and gender? Have these gender expenditure inequities been improving with time?\n\nA description of the research topic along with a concise statement of your hypotheses on this topic.\n\nYes, there are expenditure differences between divisions because what differentiates programs largely relates to the resources on the athletic department and school size (and therefore, money). When looking specifically at Division I sports programs, there are expenditure differences between men and women’s teams, but they have been improving over the years based on societal changes.\n\nIdentify the types of variables in your research question. Categorical? Quantitative?\n\nGender expenditures (men and female are different categories) = quantitative\nClassification (division) = categorical\nTotalexpenditure (for both men and women combined) = quantitative\nYear = quantitative\nSport = categorical"
  },
  {
    "objectID": "proposal.html#literature-1",
    "href": "proposal.html#literature-1",
    "title": "Spotify, Sports, and Soup",
    "section": "Literature",
    "text": "Literature\n\nFind one published credible article on the topic you are interested in researching.\n\nhttps://www.espn.com/college-sports/story/_/id/32481915/second-ncaa-gender-equity-report-shows-more-money-spent-male-athletes-female-ones\n\nProvide a one paragraph summary about the article.\n\nThis article looks at the average money spent by the NCAA on men vs women. An NCAA gender equity report found that, on average, the NCAA spends more money on male athletes than female athletes. For example, looking at D1 and national championship participants (excluding basketball) in 2018-2019, money spent on female participants was on average $1700 less than for male participants. The report also found that this gap is greater in the 6 single gender sports.  \n\nIn 1-2 sentences, explain how your research question builds on / is different than the article you have cited.\n\nOur research question will also analyze differences in gender equity in college sports, however we will also analyze how this difference has changed over time and how it differs betweent divisions. We will also look at equity differences between sports."
  },
  {
    "objectID": "proposal.html#glimpse-of-data-1",
    "href": "proposal.html#glimpse-of-data-1",
    "title": "Spotify, Sports, and Soup",
    "section": "Glimpse of data",
    "text": "Glimpse of data\n\nsports <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-03-29/sports.csv')\n\nRows: 132327 Columns: 28\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (8): institution_name, city_txt, state_cd, zip_text, classification_nam...\ndbl (20): year, unitid, classification_code, ef_male_count, ef_female_count,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nglimpse(sports)\n\nRows: 132,327\nColumns: 28\n$ year                 <dbl> 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2…\n$ unitid               <dbl> 100654, 100654, 100654, 100654, 100654, 100654, 1…\n$ institution_name     <chr> \"Alabama A & M University\", \"Alabama A & M Univer…\n$ city_txt             <chr> \"Normal\", \"Normal\", \"Normal\", \"Normal\", \"Normal\",…\n$ state_cd             <chr> \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"…\n$ zip_text             <chr> \"35762\", \"35762\", \"35762\", \"35762\", \"35762\", \"357…\n$ classification_code  <dbl> 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1…\n$ classification_name  <chr> \"NCAA Division I-FCS\", \"NCAA Division I-FCS\", \"NC…\n$ classification_other <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ef_male_count        <dbl> 1923, 1923, 1923, 1923, 1923, 1923, 1923, 1923, 1…\n$ ef_female_count      <dbl> 2300, 2300, 2300, 2300, 2300, 2300, 2300, 2300, 2…\n$ ef_total_count       <dbl> 4223, 4223, 4223, 4223, 4223, 4223, 4223, 4223, 4…\n$ sector_cd            <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ sector_name          <chr> \"Public, 4-year or above\", \"Public, 4-year or abo…\n$ sportscode           <dbl> 1, 2, 3, 7, 8, 15, 16, 22, 26, 33, 1, 2, 3, 8, 12…\n$ partic_men           <dbl> 31, 19, 61, 99, 9, NA, NA, 7, NA, NA, 32, 13, NA,…\n$ partic_women         <dbl> NA, 16, 46, NA, NA, 21, 25, 10, 16, 9, NA, 20, 68…\n$ partic_coed_men      <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ partic_coed_women    <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ sum_partic_men       <dbl> 31, 19, 61, 99, 9, 0, 0, 7, 0, 0, 32, 13, 0, 10, …\n$ sum_partic_women     <dbl> 0, 16, 46, 0, 0, 21, 25, 10, 16, 9, 0, 20, 68, 7,…\n$ rev_men              <dbl> 345592, 1211095, 183333, 2808949, 78270, NA, NA, …\n$ rev_women            <dbl> NA, 748833, 315574, NA, NA, 410717, 298164, 13114…\n$ total_rev_menwomen   <dbl> 345592, 1959928, 498907, 2808949, 78270, 410717, …\n$ exp_men              <dbl> 397818, 817868, 246949, 3059353, 83913, NA, NA, 9…\n$ exp_women            <dbl> NA, 742460, 251184, NA, NA, 432648, 340259, 11388…\n$ total_exp_menwomen   <dbl> 397818, 1560328, 498133, 3059353, 83913, 432648, …\n$ sports               <chr> \"Baseball\", \"Basketball\", \"All Track Combined\", \"…"
  },
  {
    "objectID": "proposal.html#introduction-and-data-2",
    "href": "proposal.html#introduction-and-data-2",
    "title": "Spotify, Sports, and Soup",
    "section": "Introduction and data",
    "text": "Introduction and data\n\nIdentify the source of the data.\n\nThe source of this data is from The Ramen Rater’s Big List.\n\nState when and how it was originally collected (by the original data curator, not necessarily how you found the data).\n\nThis data was created and collected by the founder of the Ramen Rater, Hiens Lienesch. He has been eating and reviewing different brands and flavors of Ramen since 2002. He has reviewed 4300 types of Ramen and created a dataset with their flavors, brands, and ratings. This dataset includes his findings up until 2020.\n\nWrite a brief description of the observations.\n\nFor each of his reviews, he includes the review number, brand of ramen, variety, style, country, and number of starts. There are many varieties offered by the same brand. He has rated the flavors from within each brand to create a comprehensive rating system."
  },
  {
    "objectID": "proposal.html#research-question-2",
    "href": "proposal.html#research-question-2",
    "title": "Spotify, Sports, and Soup",
    "section": "Research question",
    "text": "Research question\n\nA well formulated research question. (You may include more than one research question if you want to receive feedback on different ideas for your project. However, one per data set is required.)\n\nAre ratings of ramen different based on their style: Are cups, packs, boxes, or bowls rate higher overall? What brand of ramen has the highest rating? Do certain countries create ramen with higher ratings?\n\nA description of the research topic along with a concise statement of your hypotheses on this topic.\n\nThis research topic is analyzing ramen preferences based on origin, style, and brand. We hypothesize that the ramen brands that originate from Japan will have higher ratings, because ramen is a traditional Japanese dish. Additionally, we hypothesize that bowls will have higher ratings, because their packaging is more consistent with a traditional serving style.\n\nIdentify the types of variables in your research question. Categorical? Quantitative?\n\nThere are multiple categorical variables: Brand, Variety, Style, Country. The quantitative variables are review number and stars."
  },
  {
    "objectID": "proposal.html#literature-2",
    "href": "proposal.html#literature-2",
    "title": "Spotify, Sports, and Soup",
    "section": "Literature",
    "text": "Literature\n\nFind one published credible article on the topic you are interested in researching.\n\nhttps://towardsdatascience.com/exploring-the-world-of-ramen-through-text-analytics-1131280c4c6b\n\nProvide a one paragraph summary about the article.\n\nThis article analyzes the big list to discover what the most popular ramen themes are around the world. Specifically, it looks for the use of specific words within the names of popular ramen brands. Because this list includes ramen data from 38 countries, it is informative on what ramen names are used most frequently. The article’s author found unigrams such as “noodles”, “noodle”, “flavour”, “chicken”, and “cup”. They then found the frequency of these words within the dataset. Then they analyzed these words to see if they were logical in titles. Some frequently used words had to be modified for clarity, such as “tom” to “tom yum” a certain kind of soup. They then organized these themes by country and found that certain countries produce certain themes of ramen. The USA had a frequent use of chicken, soup, spicy. They then visualized these distributions through a map. This article analyzes the many ways you can modify and look at this unique dataset. The information extracted from the data helped inform their ramen purchases.\n\nIn 1-2 sentences, explain how your research question builds on / is different than the article you have cited.\n\nOur research question analyzes which country has the highest rated ramen. This dataset looked into popular types of ramen by country, while ours will analyze which country produces the best Ramen."
  },
  {
    "objectID": "proposal.html#glimpse-of-data-2",
    "href": "proposal.html#glimpse-of-data-2",
    "title": "Spotify, Sports, and Soup",
    "section": "Glimpse of data",
    "text": "Glimpse of data\n\nramen_ratings <- readr::read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-06-04/ramen_ratings.csv\")\n\nRows: 3180 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): brand, variety, style, country\ndbl (2): review_number, stars\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nglimpse(ramen_ratings)\n\nRows: 3,180\nColumns: 6\n$ review_number <dbl> 3180, 3179, 3178, 3177, 3176, 3175, 3174, 3173, 3172, 31…\n$ brand         <chr> \"Yum Yum\", \"Nagatanien\", \"Acecook\", \"Maison de Coree\", \"…\n$ variety       <chr> \"Tem Tem Tom Yum Moo Deng\", \"tom Yum Kung Rice Vermicell…\n$ style         <chr> \"Cup\", \"Pack\", \"Cup\", \"Cup\", \"Tray\", \"Cup\", \"Pack\", \"Pac…\n$ country       <chr> \"Thailand\", \"Japan\", \"Japan\", \"France\", \"Japan\", \"Japan\"…\n$ stars         <dbl> 3.75, 2.00, 2.50, 3.75, 5.00, 3.50, 3.75, 5.00, 3.50, 4.…"
  },
  {
    "objectID": "report.html",
    "href": "report.html",
    "title": "Just Dance(ability)",
    "section": "",
    "text": "Within the music industry there is always a desire to be able to predict the next big song. Different factors will always play into whether or not a song becomes popular. We wish to explore how danceability, in particular, affects the popularity of songs. To dig a bit deeper, we want to see if the impact of danceability on popularity changes depending on which genre we are exploring. We are hoping that by exploring this correlation we can create a predictive model for popularity based on danceability. Based on the correlations we find by genre this model may be more accurate for certain genres more so than others. We have three research questions: How does danceability affect the popularity of songs? How does this vary between genres? How do other song variables influence this relationship.\nOur research project will center around the Spotifyr, an open source music dataset provided by Spotify. The dataset contains around 5,000 songs from six major music categories (EDM, Latin, Pop, R&B, Rap, and Rock). These genres were selected from Every Noise, which is a visualization created and maintained by a genre taxonomist. The top four genre’s from Every Noise were used to find 20 playlists that contained relevant songs. The 5000 songs from these playlists were added to the dataset that we are analyzing. This data was gathered for a tidytuesday podcast. For each song, the data set contains general information such as the songs album, artist, release data, but also more interesting statistics on danceability, energy, and popularity. The Spotify Web API was used to gain information about the songs. Spotify has twelve different features that are associated with songs. These are included within the dataset as variables.\nWe considered different ethical questions surrounding data collection. Specifically, we explored how songs were chosen from Spotify and acquisition bias; however, do not believe there are significant ethical concerns related to this data and data collection.\nWe hypothesize that there will be a positive correlation between danceability and popularity, but that correlation will differ between genres. We expect the Latin genre to have the greatest correlation. Additionally, we hypothesize that the tempo and the energy of the song (when taken into consideration with the danceability rating) will better be able to predict track popularity rating."
  },
  {
    "objectID": "report.html#methodology",
    "href": "report.html#methodology",
    "title": "Just Dance(ability)",
    "section": "Methodology",
    "text": "Methodology\nWe plan to answer this research question through a linear regression analysis looking at if the danceability of a song can be predictive for its popularity. This regression analysis will likely consider the energy and tempo variables in the regression analysis. This analysis will be faceted across genres as well. First, we will look to see at the general relationship between danceability rating and track popularity rating of songs in the data. Then, we will look to into the level of this relationship in terms of different types of music by assessing genre as variable. In addition to these basic visualizations, we will also calculate a number of summary statistics that will further assist in other analyses and allow us to better understand the data. This includes calculation of the mean danceability rating and popularity ratings specifically to each genre.\nAdditionally, we will conduct a regression analysis to predict popularity on the basis of danceability ratings. This linear regression will have additional models looking specifically at Latin and Rap genres as well. There will also be a regression analysis conducted to assess how other variables related to a song influence the relationship between danceability and popularity. The approriate type of regression for this would be a multiple linear regression, taking into consideration multiple explanatory variables to predict track popularity. The specific quantitative variables we want to consider are energy and tempo because of their relation to danceability in this regression analysis as similarly considered by a similar project by Ochi et al. (n.d.). We will assess these types of regressions with both additive and interaction models to see which type of model best fits the data.\nTo assess these models created, we will conduct calculations for adjusted R-squared and AIC. We used adjusted R-squared rather than r-squared because it takes into account the amount of variables that are being used. We were analyzing different variables in this dataset, so adjusted r-square was a better metric to use. These two metrics were used to determine the best fit model, specifically when using the many variables that we were assessing."
  },
  {
    "objectID": "report.html#data",
    "href": "report.html#data",
    "title": "Just Dance(ability)",
    "section": "Data",
    "text": "Data\n\nlibrary(tidyverse)\nlibrary(tidymodels)\n\n\nspotify_songs <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-21/spotify_songs.csv')\n\nhead(spotify_songs)\n\n# A tibble: 6 × 23\n  track_id       track…¹ track…² track…³ track…⁴ track…⁵ track…⁶ playl…⁷ playl…⁸\n  <chr>          <chr>   <chr>     <dbl> <chr>   <chr>   <chr>   <chr>   <chr>  \n1 6f807x0ima9a1… I Don'… Ed She…      66 2oCs0D… I Don'… 2019-0… Pop Re… 37i9dQ…\n2 0r7CVbZTWZgbT… Memori… Maroon…      67 63rPSO… Memori… 2019-1… Pop Re… 37i9dQ…\n3 1z1Hg7Vb0AhHD… All th… Zara L…      70 1HoSmj… All th… 2019-0… Pop Re… 37i9dQ…\n4 75FpbthrwQmzH… Call Y… The Ch…      60 1nqYsO… Call Y… 2019-0… Pop Re… 37i9dQ…\n5 1e8PAfcKUYoKk… Someon… Lewis …      69 7m7vv9… Someon… 2019-0… Pop Re… 37i9dQ…\n6 7fvUMiyapMsRR… Beauti… Ed She…      67 2yiy9c… Beauti… 2019-0… Pop Re… 37i9dQ…\n# … with 14 more variables: playlist_genre <chr>, playlist_subgenre <chr>,\n#   danceability <dbl>, energy <dbl>, key <dbl>, loudness <dbl>, mode <dbl>,\n#   speechiness <dbl>, acousticness <dbl>, instrumentalness <dbl>,\n#   liveness <dbl>, valence <dbl>, tempo <dbl>, duration_ms <dbl>, and\n#   abbreviated variable names ¹​track_name, ²​track_artist, ³​track_popularity,\n#   ⁴​track_album_id, ⁵​track_album_name, ⁶​track_album_release_date,\n#   ⁷​playlist_name, ⁸​playlist_id\n\nnrow(spotify_songs)\n\n[1] 32833"
  },
  {
    "objectID": "report.html#analysis",
    "href": "report.html#analysis",
    "title": "Finding The Next Big Hit Through Danceability",
    "section": "Analysis",
    "text": "Analysis\nFirst we will plot out general popularity of songs versus their adaptability score. This will allow us to visualize how dance-ability affects song’s popularity overall in the data set.\n\nspotify_songs |>\n  ggplot(\n    aes(\n      x = danceability,\n      y = track_popularity\n    )\n  ) +\n  geom_point(color = \"steelblue\") +\n  geom_smooth(method = \"lm\", color = \"black\") +\n  labs(\n    x = \"Danceability Rating\",\n    y = \"Track Popularity Rating\",\n    title = \"How does danceability affect the popularity of a song?\"\n  )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nFrom the above plot we see a very supbtle correlation between the dance ability rating and its popularity. However, with so many data points on this plot dance ability likely is not a great predictor for track popularity generally.\nNext, we’d like to see what this plot looks like if we facet it by the genre.\n\nspotify_songs |>\n  ggplot(\n    aes(\n      x = danceability,\n      y = track_popularity\n    )\n  ) +\n  geom_point(color = \"steelblue\") +\n  geom_smooth(method = \"lm\", color = \"black\") +\n  facet_wrap(~playlist_genre) +\n  labs(\n    x = \"Danceability Rating\",\n    y = \"Track Popularity Rating\",\n    title = \"Danceability vs popularity of songs in different genres\"\n  )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nHere we can see that there is certainly a difference in how dance-ability affects the popularity of a track depending on the songs genre. Our highest correlations found here are rap and pop while we even see a slightly decreasing slope for r&b. However, its worth noting that some genres tend to have a higher dance-ability score on average such as Latin and rap. While rock has a higher correlation than some other genres, on average its songs are less dance-able than the others.\nNow, we’d like to train a linear regression model to predict popularity using dance-ability. We’ll train three separate models here.\n\nA general model that can be used for any genre\nA model that predicts how dance-ability affects the popularity of a song from the Latin genre.\nA model that predicts how dance-ability affects the popularity of a song from the rap genre.\n\n\ngeneral_dance <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability, data = spotify_songs) \n\nlatin_songs <- \n  spotify_songs |>\n  filter(playlist_genre == \"latin\")\n\nlatin_dance <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability, data = latin_songs)\n\nrap_songs <- \n  spotify_songs |>\n  filter(playlist_genre == \"rap\")\n\nrap_dance <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability, data = rap_songs)\n\ngeneral_dance |>\n  tidy()\n\n# A tibble: 2 × 5\n  term         estimate std.error statistic  p.value\n  <chr>           <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)      35.2     0.636      55.3 0       \n2 danceability     11.1     0.948      11.8 7.57e-32\n\nlatin_dance |>\n  tidy()\n\n# A tibble: 2 × 5\n  term         estimate std.error statistic  p.value\n  <chr>           <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)     40.8       2.22     18.3  9.23e-73\n2 danceability     8.78      3.08      2.85 4.37e- 3\n\nrap_dance |>\n  tidy()\n\n# A tibble: 2 × 5\n  term         estimate std.error statistic  p.value\n  <chr>           <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)      25.5      1.63      15.6 5.39e-54\n2 danceability     24.7      2.23      11.1 3.47e-28\n\n\n\\(pop_{general} = 35.2 + 11.2 * danceability\\)\n\\(pop_{latin} = 40.7 + 8.8 * danceability\\)\n\\(pop_{rap} = 25.5 + 24.7 * danceability\\)\n** Interpretation? **"
  },
  {
    "objectID": "report.html#literature-review",
    "href": "report.html#literature-review",
    "title": "Just Dance(ability)",
    "section": "Literature Review",
    "text": "Literature Review\nOur data set was originally found through the #tidytuesday project on GitHub. Kaylin Pavlik, a blogger, explored this dataset in various ways. She explored audio features by genre. She found that EDM tracks are the least likely to have acoustic features, but highly likely to have high energy with low valence. Additionally, through density/line plots, she found that danceability, tempo, valence, and energy had the largest differences by genre. We are building on her research by specifically analyzing the differences between danceability by genre. Our research question digs deeper into this question. Additionally, she found that Latin music was very danceable, while rock music had very little danceability. We will continue to look into the specifics of these differences through linear regression models ^[https://www.kaylinpavlik.com/classifying-songs-genres].\nAmri Rohman also analyzed this dataset ^[https://rpubs.com/amrirohman/spotify-song]. She specifically looked at songs and their popularity. In 2020 she found that the most popular Spotify song was Dance Monkey. She also looked at the differences in tempo for each genre, faceted by different eras of music. She found that rap songs in the 2000s had slower tempos. We are going to build on these research questions by looking at the popularity of songs by genre faceted by dancability. We are both analyzing how different song features vary across genres.\nAlthough other groups/people have looked into the same Spotifyr datset from tidytuesday, we are planning on looking into vastly different research questions. Because this is a large data set with many variables, there are many questions to look into. We hope to dive into popularity to analyze reasons as to why songs and genres have gained notoriety."
  },
  {
    "objectID": "report.html#analysis-results",
    "href": "report.html#analysis-results",
    "title": "Finding The Next Big Hit Through Danceability",
    "section": "Analysis (Results)",
    "text": "Analysis (Results)\nFirst we will plot out general popularity of songs versus their adaptability score. This will allow us to visualize how dance-ability affects song’s popularity overall in the data set.\n\nspotify_songs |>\n  ggplot(\n    aes(\n      x = danceability,\n      y = track_popularity\n    )\n  ) +\n  geom_point(color = \"steelblue\") +\n  geom_smooth(method = \"lm\", color = \"black\") +\n  labs(\n    x = \"Danceability Rating\",\n    y = \"Track Popularity Rating\",\n    title = \"How does danceability affect the popularity of a song?\"\n  )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nFrom the above plot we see a very supbtle correlation between the dance ability rating and its popularity. However, with so many data points on this plot dance ability likely is not a great predictor for track popularity generally.\nNext, we’d like to see what this plot looks like if we facet it by the genre.\n\nspotify_songs |>\n  ggplot(\n    aes(\n      x = danceability,\n      y = track_popularity\n    )\n  ) +\n  geom_point(color = \"steelblue\") +\n  geom_smooth(method = \"lm\", color = \"black\") +\n  facet_wrap(~playlist_genre) +\n  labs(\n    x = \"Danceability Rating\",\n    y = \"Track Popularity Rating\",\n    title = \"Danceability vs popularity of songs in different genres\"\n  )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nHere we can see that there is certainly a difference in how dance-ability affects the popularity of a track depending on the songs genre. Our highest correlations found here are rap and pop while we even see a slightly decreasing slope for r&b. However, its worth noting that some genres tend to have a higher dance-ability score on average such as Latin and rap. While rock has a higher correlation than some other genres, on average its songs are less dance-able than the others.\nNow, we’d like to train a linear regression model to predict popularity using dance-ability. We’ll train three separate models here.\n\nA general model that can be used for any genre\nA model that predicts how dance-ability affects the popularity of a song from the Latin genre.\nA model that predicts how dance-ability affects the popularity of a song from the rap genre.\n\n\ngeneral_dance <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability, data = spotify_songs) \n\nlatin_songs <- \n  spotify_songs |>\n  filter(playlist_genre == \"latin\")\n\nlatin_dance <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability, data = latin_songs)\n\nrap_songs <- \n  spotify_songs |>\n  filter(playlist_genre == \"rap\")\n\nrap_dance <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability, data = rap_songs)\n\ngeneral_dance |>\n  tidy()\n\n# A tibble: 2 × 5\n  term         estimate std.error statistic  p.value\n  <chr>           <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)      35.2     0.636      55.3 0       \n2 danceability     11.1     0.948      11.8 7.57e-32\n\nlatin_dance |>\n  tidy()\n\n# A tibble: 2 × 5\n  term         estimate std.error statistic  p.value\n  <chr>           <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)     40.8       2.22     18.3  9.23e-73\n2 danceability     8.78      3.08      2.85 4.37e- 3\n\nrap_dance |>\n  tidy()\n\n# A tibble: 2 × 5\n  term         estimate std.error statistic  p.value\n  <chr>           <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)      25.5      1.63      15.6 5.39e-54\n2 danceability     24.7      2.23      11.1 3.47e-28\n\n\n\\(pop_{general} = 35.2 + 11.2 * danceability\\)\nFor a 1 increase in danceability rating, there’s an estimated mean change of a song’s popularity rating (general song w/ no designated genre) by 11.2.\nWhen danceability is 0, there is an estimated mean popularity rating of 35.2.\n\\(pop_{latin} = 40.7 + 8.8 * danceability\\)\nFor a 1 increase in danceability rating, there’s an estimated mean change of a latin song’s popularity rating by up by 8.8.\nWhen danceability is 0, there is an estimated mean popularity rating of 40.7.\n\\(pop_{rap} = 25.5 + 24.7 * danceability\\)\nFor a 1 increase in danceability rating, there’s an estimated mean change of a song’s popularity rating by 11.2.\nWhen danceability is 0, there is an estimated mean popularity rating of 25.5.\nModel Fit Assessments\nNow we’d like to assess how well the regression model explains the observed data. We will do this by calculating adjusted R squared values.\n\ngeneral_dance |>\n  glance() |>\n  pull(adj.r.squared)\n\n[1] 0.00416193\n\nlatin_dance |>\n  glance() |>\n  pull(adj.r.squared)\n\n[1] 0.001381617\n\nrap_dance |>\n  glance() |>\n  pull(adj.r.squared)\n\n[1] 0.02070946\n\n\nBased on the adjusted R squared values, danceability rating as an explanatory variable is not a good predictor of popularity rating in general and in the latin and rap genres. The adjusted R squared values between 0.14-4.2% reveals a very low variability in popularity is explained by the regression model.\nNow we’d like to assess how well the regression model explains the observed data using AIC and an ROC curve.\n\n# | label: AIC-1\n\ngeneral_dance |>\n  glance() |>\n  pull(AIC)\n\n[1] 304371.9\n\nlatin_dance |>\n  glance() |>\n  pull(AIC)\n\n[1] 47986.36\n\nrap_dance |>\n  glance() |>\n  pull(AIC)\n\n[1] 52373.25\n\n\nBased on AIC calculations, the general model was best fit because it had the lowest AIC value at 304371.9, where the latin model had an AIC of 47986.36 and rap model had an AIC of 52373.25. AIC selects a model with the least mean squared error, so a lower value is preferable.\nMultiple Linear Regression Models\nNow, we’d like to train multiple linear regression models to predict popularity using dance-ability, tempo, and energy. We’ll train multiple separate models.\n\nAn additive model for danceability rating + tempo.\nAn additive model for danceability rating + energy.\nAn additive model for danceability rating + tempo + energy.\nAn interaction model for danceability rating * tempo.\nAn interaction model for danceability rating * energy.\nAn interaction model for danceability rating * tempo * energy.\n\n\n#additive models\n\ndance_plus_tempo <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability + tempo, data = spotify_songs) \ndance_plus_tempo |>\n  glance() |>\n  pull(AIC)\n\n[1] 304372.5\n\ndance_plus_energy <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability + energy, data = spotify_songs) \n\ndance_plus_energy |>\n  glance() |>\n  pull(AIC)\n\n[1] 304015.9\n\ndance_plus_tempo_energy <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability + tempo + energy, data = spotify_songs) \n\ndance_plus_tempo_energy |>\n  glance() |>\n  pull(AIC) \n\n[1] 304003.1\n\n#interactions\n\ndance_int_tempo <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability * tempo, data = spotify_songs) \ndance_int_tempo |>\n  glance() |>\n  pull(AIC)\n\n[1] 304374.2\n\ndance_int_energy <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability * energy, data = spotify_songs) \n\ndance_int_energy |>\n  glance() |>\n  pull(AIC)\n\n[1] 304012.7\n\ndance_int_tempo_energy <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability * tempo * energy, data = spotify_songs) \n\ndance_int_tempo_energy |>\n  glance() |>\n  pull(AIC) \n\n[1] 303995.3\n\n\nGiven that the interaction model between danceability rating, tempo, and energy resulted in the lowest AIC value (303995.3), it is the best fit of the ones assessed at modeling popularity of a song."
  },
  {
    "objectID": "report.html#results",
    "href": "report.html#results",
    "title": "Finding The Next Big Hit Through Danceability",
    "section": "Results",
    "text": "Results\nFirst we will plot out general popularity of songs versus their adaptability score. This will allow us to visualize how dance-ability affects song’s popularity overall in the data set.\n\nspotify_songs |>\n  ggplot(\n    aes(\n      x = danceability,\n      y = track_popularity\n    )\n  ) +\n  geom_point(color = \"steelblue\") +\n  geom_smooth(method = \"lm\", color = \"black\") +\n  labs(\n    x = \"Danceability Rating\",\n    y = \"Track Popularity Rating\",\n    title = \"How does danceability affect the popularity of a song?\"\n  )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nFrom the above plot we see a very supbtle correlation between the dance ability rating and its popularity. However, with so many data points on this plot dance ability likely is not a great predictor for track popularity generally.\nNext, we’d like to see what this plot looks like if we facet it by the genre.\n\nspotify_songs |>\n  ggplot(\n    aes(\n      x = danceability,\n      y = track_popularity\n    )\n  ) +\n  geom_point(color = \"steelblue\") +\n  geom_smooth(method = \"lm\", color = \"black\") +\n  facet_wrap(~playlist_genre) +\n  labs(\n    x = \"Danceability Rating\",\n    y = \"Track Popularity Rating\",\n    title = \"Danceability vs popularity of songs in different genres\"\n  )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nHere we can see that there is certainly a difference in how dance-ability affects the popularity of a track depending on the songs genre. Our highest correlations found here are rap and pop while we even see a slightly decreasing slope for r&b. However, its worth noting that some genres tend to have a higher dance-ability score on average such as Latin and rap. While rock has a higher correlation than some other genres, on average its songs are less dance-able than the others.\nNow, we’d like to train a linear regression model to predict popularity using dance-ability. We’ll train three separate models here.\n\nA general model that can be used for any genre\nA model that predicts how dance-ability affects the popularity of a song from the Latin genre.\nA model that predicts how dance-ability affects the popularity of a song from the rap genre.\n\n\ngeneral_dance <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability, data = spotify_songs) \n\nlatin_songs <- \n  spotify_songs |>\n  filter(playlist_genre == \"latin\")\n\nlatin_dance <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability, data = latin_songs)\n\nrap_songs <- \n  spotify_songs |>\n  filter(playlist_genre == \"rap\")\n\nrap_dance <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability, data = rap_songs)\n\ngeneral_dance |>\n  tidy()\n\n# A tibble: 2 × 5\n  term         estimate std.error statistic  p.value\n  <chr>           <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)      35.2     0.636      55.3 0       \n2 danceability     11.1     0.948      11.8 7.57e-32\n\nlatin_dance |>\n  tidy()\n\n# A tibble: 2 × 5\n  term         estimate std.error statistic  p.value\n  <chr>           <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)     40.8       2.22     18.3  9.23e-73\n2 danceability     8.78      3.08      2.85 4.37e- 3\n\nrap_dance |>\n  tidy()\n\n# A tibble: 2 × 5\n  term         estimate std.error statistic  p.value\n  <chr>           <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)      25.5      1.63      15.6 5.39e-54\n2 danceability     24.7      2.23      11.1 3.47e-28\n\n\n\\(pop_{general} = 35.2 + 11.2 * danceability\\)\nFor a 1 increase in danceability rating, there’s an estimated mean change of a song’s popularity rating (general song w/ no designated genre) by 11.2.\nWhen danceability is 0, there is an estimated mean popularity rating of 35.2.\n\\(pop_{latin} = 40.7 + 8.8 * danceability\\)\nFor a 1 increase in danceability rating, there’s an estimated mean change of a latin song’s popularity rating by up by 8.8.\nWhen danceability is 0, there is an estimated mean popularity rating of 40.7.\n\\(pop_{rap} = 25.5 + 24.7 * danceability\\)\nFor a 1 increase in danceability rating, there’s an estimated mean change of a song’s popularity rating by 11.2.\nWhen danceability is 0, there is an estimated mean popularity rating of 25.5.\nModel Fit Assessments\nNow we’d like to assess how well the regression model explains the observed data. We will do this by calculating adjusted R squared values.\n\ngeneral_dance |>\n  glance() |>\n  pull(adj.r.squared)\n\n[1] 0.00416193\n\nlatin_dance |>\n  glance() |>\n  pull(adj.r.squared)\n\n[1] 0.001381617\n\nrap_dance |>\n  glance() |>\n  pull(adj.r.squared)\n\n[1] 0.02070946\n\n\nBased on the adjusted R squared values, danceability rating as an explanatory variable is not a good predictor of popularity rating in general and in the latin and rap genres. The adjusted R squared values between 0.14-4.2% reveals a very low variability in popularity is explained by the regression model.\nNow we’d like to assess how well the regression model explains the observed data using AIC and an ROC curve.\n\n# | label: AIC-1\n\ngeneral_dance |>\n  glance() |>\n  pull(AIC)\n\n[1] 304371.9\n\nlatin_dance |>\n  glance() |>\n  pull(AIC)\n\n[1] 47986.36\n\nrap_dance |>\n  glance() |>\n  pull(AIC)\n\n[1] 52373.25\n\n\nBased on AIC calculations, the general model was best fit because it had the lowest AIC value at 304371.9, where the latin model had an AIC of 47986.36 and rap model had an AIC of 52373.25. AIC selects a model with the least mean squared error, so a lower value is preferable.\nMultiple Linear Regression Models\nNow, we’d like to train multiple linear regression models to predict popularity using dance-ability, tempo, and energy. We’ll train multiple separate models.\n\nAn additive model for danceability rating + tempo.\nAn additive model for danceability rating + energy.\nAn additive model for danceability rating + tempo + energy.\nAn interaction model for danceability rating * tempo.\nAn interaction model for danceability rating * energy.\nAn interaction model for danceability rating * tempo * energy.\n\n\n#additive models\n\ndance_plus_tempo <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability + tempo, data = spotify_songs) \ndance_plus_tempo |>\n  glance() |>\n  pull(AIC)\n\n[1] 304372.5\n\ndance_plus_energy <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability + energy, data = spotify_songs) \n\ndance_plus_energy |>\n  glance() |>\n  pull(AIC)\n\n[1] 304015.9\n\ndance_plus_tempo_energy <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability + tempo + energy, data = spotify_songs) \n\ndance_plus_tempo_energy |>\n  glance() |>\n  pull(AIC) \n\n[1] 304003.1\n\n#interactions\n\ndance_int_tempo <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability * tempo, data = spotify_songs) \ndance_int_tempo |>\n  glance() |>\n  pull(AIC)\n\n[1] 304374.2\n\ndance_int_energy <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability * energy, data = spotify_songs) \n\ndance_int_energy |>\n  glance() |>\n  pull(AIC)\n\n[1] 304012.7\n\ndance_int_tempo_energy <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability * tempo * energy, data = spotify_songs) \n\ndance_int_tempo_energy |>\n  glance() |>\n  pull(AIC) \n\n[1] 303995.3\n\n\nGiven that the interaction model between danceability rating, tempo, and energy resulted in the lowest AIC value (303995.3), it is the best fit of the ones assessed at modeling popularity of a song."
  },
  {
    "objectID": "report.html#results-and-analysis",
    "href": "report.html#results-and-analysis",
    "title": "Just Dance(ability)",
    "section": "Results and Analysis",
    "text": "Results and Analysis\nFirst we will plot out general popularity of songs versus their adaptability score. This will allow us to visualize how dance-ability affects song’s popularity overall in the data set.\n\nset.seed(33)\n\nspotify_songs |>\n  sample_n(size = 1500) |>\n  ggplot(\n    aes(\n      x = danceability,\n      y = track_popularity,\n      color = playlist_genre\n    )\n  ) +\n  geom_point(color = \"steelblue\", alpha = .5, size = .5) +\n  geom_smooth(method = \"lm\", color = \"black\") +\n  labs(\n    x = \"Danceability Rating\",\n    y = \"Track Popularity Rating\",\n    title = \"How does danceability affect the popularity of a song?\"\n  )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nFrom the above plot we see a very subtle correlation between the danceability rating and its popularity for this random sampling of 1000 songs. However, with so many data points on this plot danceability likely is not a great predictor for track popularity generally.\nNext, we’d like to see what this plot looks like if we facet it by the genre.\n\nset.seed(33)\n\nspotify_songs |> \n  sample_n(size = 1500) |>\n  ggplot(\n    aes(\n      x = danceability,\n      y = track_popularity,\n      color = playlist_genre\n    )\n  ) +\n  geom_point(size = .3) +\n  geom_smooth(method = \"lm\", color = \"black\") +\n  facet_wrap(~playlist_genre) +\n  labs(\n    x = \"Danceability Rating\",\n    y = \"Track Popularity Rating\",\n    title = \"Danceability vs popularity of songs in different genres\", \n    color = \"Genre\"\n  )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nHere we can see that there is certainly a difference in how dance-ability affects the popularity of a track depending on the songs genre. Our highest correlations found here are rap and pop while we even see a slightly decreasing slope for r&b. However, its worth noting that some genres tend to have a higher dance-ability score on average such as Latin and rap. While rock has a higher correlation than some other genres, on average its songs are less dance-able than the others.\nNow, we’d like to train a linear regression model to predict popularity using dance-ability. We’ll train three separate models here.\n\nA general model that can be used for any genre\nA model that predicts how dance-ability affects the popularity of a song from the Latin genre.\nA model that predicts how dance-ability affects the popularity of a song from the rap genre.\n\n\ngeneral_dance <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability, data = spotify_songs) \n\nlatin_songs <- \n  spotify_songs |>\n  filter(playlist_genre == \"latin\")\n\nlatin_dance <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability, data = latin_songs)\n\nrap_songs <- \n  spotify_songs |>\n  filter(playlist_genre == \"rap\")\n\nrap_dance <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability, data = rap_songs)\n\ngeneral_dance |>\n  tidy()\n\n# A tibble: 2 × 5\n  term         estimate std.error statistic  p.value\n  <chr>           <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)      35.2     0.636      55.3 0       \n2 danceability     11.1     0.948      11.8 7.57e-32\n\nlatin_dance |>\n  tidy()\n\n# A tibble: 2 × 5\n  term         estimate std.error statistic  p.value\n  <chr>           <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)     40.8       2.22     18.3  9.23e-73\n2 danceability     8.78      3.08      2.85 4.37e- 3\n\nrap_dance |>\n  tidy()\n\n# A tibble: 2 × 5\n  term         estimate std.error statistic  p.value\n  <chr>           <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)      25.5      1.63      15.6 5.39e-54\n2 danceability     24.7      2.23      11.1 3.47e-28\n\n\n\\(pop_{general} = 35.2 + 11.2 * danceability\\)\nFor a 1 increase in danceability rating, there’s an estimated mean change of a song’s popularity rating (general song w/ no designated genre) by 11.2.\nWhen danceability is 0, there is an estimated mean popularity rating of 35.2.\n\\(pop_{latin} = 40.7 + 8.8 * danceability\\)\nFor a 1 increase in danceability rating, there’s an estimated mean change of a latin song’s popularity rating by up by 8.8.\nWhen danceability is 0, there is an estimated mean popularity rating of 40.7.\n\\(pop_{rap} = 25.5 + 24.7 * danceability\\)\nFor a 1 increase in danceability rating, there’s an estimated mean change of a song’s popularity rating by 11.2.\nWhen danceability is 0, there is an estimated mean popularity rating of 25.5.\nModel Fit Assessments\nNow we’d like to assess how well the regression model explains the observed data. We will do this by calculating adjusted R squared values.\n\ngeneral_dance |>\n  glance() |>\n  pull(adj.r.squared) \n\n[1] 0.00416193\n\nlatin_dance |>\n  glance() |>\n  pull(adj.r.squared) \n\n[1] 0.001381617\n\nrap_dance |>\n  glance() |>\n  pull(adj.r.squared) \n\n[1] 0.02070946\n\n\n\nadjusted_R2_table <- data.frame(\n  R2_general_dance = 0.00416193, \n  R2_latin_dance = 0.001381617, \n  R2_rap_dance = 0.02070946\n)\n\nglimpse(adjusted_R2_table)\n\nRows: 1\nColumns: 3\n$ R2_general_dance <dbl> 0.00416193\n$ R2_latin_dance   <dbl> 0.001381617\n$ R2_rap_dance     <dbl> 0.02070946\n\n\nBased on the adjusted R squared values, danceability rating as an explanatory variable is not a good predictor of popularity rating in general and in the latin and rap genres. The adjusted R squared values between 0.14-4.2% reveals a very low variability in popularity is explained by the regression model.\nNow we’d like to assess how well the regression model explains the observed data using AIC and an ROC curve.\n\n# | label: AIC-1\n\ngeneral_dance |>\n  glance() |>\n  pull(AIC) |>\n  tibble()\n\n# A tibble: 1 × 1\n  `pull(glance(general_dance), AIC)`\n                               <dbl>\n1                            304372.\n\nlatin_dance |>\n  glance() |>\n  pull(AIC) |>\n  tibble()\n\n# A tibble: 1 × 1\n  `pull(glance(latin_dance), AIC)`\n                             <dbl>\n1                           47986.\n\nrap_dance |>\n  glance() |>\n  pull(AIC) |>\n  tibble()\n\n# A tibble: 1 × 1\n  `pull(glance(rap_dance), AIC)`\n                           <dbl>\n1                         52373.\n\n\n\nLR_AIC_table <- data.frame(\n  AIC_general_dance = 304371.9, \n  AIC_latin_dance = 47986.36,\n  AIC_rap_dance = 52373.25\n)\n\nglimpse(LR_AIC_table)\n\nRows: 1\nColumns: 3\n$ AIC_general_dance <dbl> 304371.9\n$ AIC_latin_dance   <dbl> 47986.36\n$ AIC_rap_dance     <dbl> 52373.25\n\n\nBased on AIC calculations, the general model was best fit because it had the lowest AIC value at 304371.9, where the latin model had an AIC of 47986.36 and rap model had an AIC of 52373.25. AIC selects a model with the least mean squared error, so a lower value is preferable ^[http://www.sthda.com/english/articles/38-regression-model-validation/158-regression-model-accuracy-metrics-r-square-aic-bic-cp-and-more/].\nMultiple Linear Regression Models\nNow, we’d like to train multiple linear regression models to predict popularity using dance-ability, tempo, and energy. We’ll train multiple separate models.\n\nAn additive model for danceability rating + tempo.\nAn additive model for danceability rating + energy.\nAn additive model for danceability rating + tempo + energy.\nAn interaction model for danceability rating * tempo.\nAn interaction model for danceability rating * energy.\nAn interaction model for danceability rating * tempo * energy.\n\n\n#additive models\n\ndance_plus_tempo <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability + tempo, data = spotify_songs) \ndance_plus_tempo |>\n  glance() |>\n  pull(AIC)\n\n[1] 304372.5\n\ndance_plus_energy <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability + energy, data = spotify_songs) \n\ndance_plus_energy |>\n  glance() |>\n  pull(AIC)\n\n[1] 304015.9\n\ndance_plus_tempo_energy <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability + tempo + energy, data = spotify_songs) \n\ndance_plus_tempo_energy |>\n  glance() |>\n  pull(AIC) \n\n[1] 304003.1\n\n#interactions\n\ndance_int_tempo <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability * tempo, data = spotify_songs) \ndance_int_tempo |>\n  glance() |>\n  pull(AIC)\n\n[1] 304374.2\n\ndance_int_energy <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability * energy, data = spotify_songs) \n\ndance_int_energy |>\n  glance() |>\n  pull(AIC)\n\n[1] 304012.7\n\ndance_int_tempo_energy <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability * tempo * energy, data = spotify_songs) \n\ndance_int_tempo_energy |>\n  glance() |>\n  pull(AIC) \n\n[1] 303995.3\n\n\nGiven that the interaction model between danceability rating, tempo, and energy resulted in the lowest AIC value (303995.3), it is the best fit of the ones assessed at modeling popularity of a song. We excluded genre in the multiple-linear regression models, because we learned that genre did not have significant impacts on our previous predictive models. This caused us to shift our focus to other variables that could potentially impact our predicative models.\n\nMLR_AIC_table <- data.frame(\n  AIC_dance_plus_tempo = 304372.5, \n  AIC_dance_plus_energy = 304015.9, \n  AIC_dance_plus_tempo_energy = 304003.1,\n  AIC_dance_int_tempo = 304374.2, \n  AIC_dance_int_energy = 304012.7, \n  AIC_dance_int_tempo_energy = 303995.3\n  )\n\nglimpse(MLR_AIC_table)\n\nRows: 1\nColumns: 6\n$ AIC_dance_plus_tempo        <dbl> 304372.5\n$ AIC_dance_plus_energy       <dbl> 304015.9\n$ AIC_dance_plus_tempo_energy <dbl> 304003.1\n$ AIC_dance_int_tempo         <dbl> 304374.2\n$ AIC_dance_int_energy        <dbl> 304012.7\n$ AIC_dance_int_tempo_energy  <dbl> 303995.3"
  },
  {
    "objectID": "report.html#overall-results",
    "href": "report.html#overall-results",
    "title": "Finding The Next Big Hit Through Danceability",
    "section": "Overall Results",
    "text": "Results and Analysis\nFirst we will plot out general popularity of songs versus their adaptability score. This will allow us to visualize how dance-ability affects song’s popularity overall in the data set.\n\nset.seed(33)\n\nspotify_songs |>\n  sample_n(size = 1500) |>\n  ggplot(\n    aes(\n      x = danceability,\n      y = track_popularity,\n      color = playlist_genre\n    )\n  ) +\n  geom_point(color = \"steelblue\", alpha = .5) +\n  geom_smooth(method = \"lm\", color = \"black\") +\n  labs(\n    x = \"Danceability Rating\",\n    y = \"Track Popularity Rating\",\n    title = \"How does danceability affect the popularity of a song?\"\n  )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nFrom the above plot we see a very subtle correlation between the danceability rating and its popularity for this random sampling of 1000 songs. However, with so many data points on this plot danceability likely is not a great predictor for track popularity generally.\nNext, we’d like to see what this plot looks like if we facet it by the genre.\n\nset.seed(33)\n\nspotify_songs |> \n  sample_n(size = 1500) |>\n  ggplot(\n    aes(\n      x = danceability,\n      y = track_popularity,\n      color = playlist_genre\n    )\n  ) +\n  geom_point(alpha = .5) +\n  geom_smooth(method = \"lm\", color = \"black\") +\n  facet_wrap(~playlist_genre) +\n  labs(\n    x = \"Danceability Rating\",\n    y = \"Track Popularity Rating\",\n    title = \"Danceability vs popularity of songs in different genres\", \n    color = \"Genre\"\n  )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nHere we can see that there is certainly a difference in how dance-ability affects the popularity of a track depending on the songs genre. Our highest correlations found here are rap and pop while we even see a slightly decreasing slope for r&b. However, its worth noting that some genres tend to have a higher dance-ability score on average such as Latin and rap. While rock has a higher correlation than some other genres, on average its songs are less dance-able than the others.\nNow, we’d like to train a linear regression model to predict popularity using dance-ability. We’ll train three separate models here.\n\nA general model that can be used for any genre\nA model that predicts how dance-ability affects the popularity of a song from the Latin genre.\nA model that predicts how dance-ability affects the popularity of a song from the rap genre.\n\n\ngeneral_dance <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability, data = spotify_songs) \n\nlatin_songs <- \n  spotify_songs |>\n  filter(playlist_genre == \"latin\")\n\nlatin_dance <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability, data = latin_songs)\n\nrap_songs <- \n  spotify_songs |>\n  filter(playlist_genre == \"rap\")\n\nrap_dance <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability, data = rap_songs)\n\ngeneral_dance |>\n  tidy()\n\n# A tibble: 2 × 5\n  term         estimate std.error statistic  p.value\n  <chr>           <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)      35.2     0.636      55.3 0       \n2 danceability     11.1     0.948      11.8 7.57e-32\n\nlatin_dance |>\n  tidy()\n\n# A tibble: 2 × 5\n  term         estimate std.error statistic  p.value\n  <chr>           <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)     40.8       2.22     18.3  9.23e-73\n2 danceability     8.78      3.08      2.85 4.37e- 3\n\nrap_dance |>\n  tidy()\n\n# A tibble: 2 × 5\n  term         estimate std.error statistic  p.value\n  <chr>           <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)      25.5      1.63      15.6 5.39e-54\n2 danceability     24.7      2.23      11.1 3.47e-28\n\n\n\\(pop_{general} = 35.2 + 11.2 * danceability\\)\nFor a 1 increase in danceability rating, there’s an estimated mean change of a song’s popularity rating (general song w/ no designated genre) by 11.2.\nWhen danceability is 0, there is an estimated mean popularity rating of 35.2.\n\\(pop_{latin} = 40.7 + 8.8 * danceability\\)\nFor a 1 increase in danceability rating, there’s an estimated mean change of a latin song’s popularity rating by up by 8.8.\nWhen danceability is 0, there is an estimated mean popularity rating of 40.7.\n\\(pop_{rap} = 25.5 + 24.7 * danceability\\)\nFor a 1 increase in danceability rating, there’s an estimated mean change of a song’s popularity rating by 11.2.\nWhen danceability is 0, there is an estimated mean popularity rating of 25.5.\nModel Fit Assessments\nNow we’d like to assess how well the regression model explains the observed data. We will do this by calculating adjusted R squared values.\n\ngeneral_dance |>\n  glance() |>\n  pull(adj.r.squared)\n\n[1] 0.00416193\n\nlatin_dance |>\n  glance() |>\n  pull(adj.r.squared)\n\n[1] 0.001381617\n\nrap_dance |>\n  glance() |>\n  pull(adj.r.squared)\n\n[1] 0.02070946\n\n\nBased on the adjusted R squared values, danceability rating as an explanatory variable is not a good predictor of popularity rating in general and in the latin and rap genres. The adjusted R squared values between 0.14-4.2% reveals a very low variability in popularity is explained by the regression model.\nNow we’d like to assess how well the regression model explains the observed data using AIC and an ROC curve.\n\n# | label: AIC-1\n\ngeneral_dance |>\n  glance() |>\n  pull(AIC)\n\n[1] 304371.9\n\nlatin_dance |>\n  glance() |>\n  pull(AIC)\n\n[1] 47986.36\n\nrap_dance |>\n  glance() |>\n  pull(AIC)\n\n[1] 52373.25\n\n\nBased on AIC calculations, the general model was best fit because it had the lowest AIC value at 304371.9, where the latin model had an AIC of 47986.36 and rap model had an AIC of 52373.25. AIC selects a model with the least mean squared error, so a lower value is preferable.\nMultiple Linear Regression Models\nNow, we’d like to train multiple linear regression models to predict popularity using dance-ability, tempo, and energy. We’ll train multiple separate models.\n\nAn additive model for danceability rating + tempo.\nAn additive model for danceability rating + energy.\nAn additive model for danceability rating + tempo + energy.\nAn interaction model for danceability rating * tempo.\nAn interaction model for danceability rating * energy.\nAn interaction model for danceability rating * tempo * energy.\n\n\n#additive models\n\ndance_plus_tempo <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability + tempo, data = spotify_songs) \ndance_plus_tempo |>\n  glance() |>\n  pull(AIC)\n\n[1] 304372.5\n\ndance_plus_energy <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability + energy, data = spotify_songs) \n\ndance_plus_energy |>\n  glance() |>\n  pull(AIC)\n\n[1] 304015.9\n\ndance_plus_tempo_energy <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability + tempo + energy, data = spotify_songs) \n\ndance_plus_tempo_energy |>\n  glance() |>\n  pull(AIC) \n\n[1] 304003.1\n\n#interactions\n\ndance_int_tempo <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability * tempo, data = spotify_songs) \ndance_int_tempo |>\n  glance() |>\n  pull(AIC)\n\n[1] 304374.2\n\ndance_int_energy <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability * energy, data = spotify_songs) \n\ndance_int_energy |>\n  glance() |>\n  pull(AIC)\n\n[1] 304012.7\n\ndance_int_tempo_energy <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(track_popularity ~ danceability * tempo * energy, data = spotify_songs) \n\ndance_int_tempo_energy |>\n  glance() |>\n  pull(AIC) \n\n[1] 303995.3\n\n\nGiven that the interaction model between danceability rating, tempo, and energy resulted in the lowest AIC value (303995.3), it is the best fit of the ones assessed at modeling popularity of a song."
  },
  {
    "objectID": "report.html#overall-results-next-steps-limitations-discussion",
    "href": "report.html#overall-results-next-steps-limitations-discussion",
    "title": "Just Dance(ability)",
    "section": "Overall Results + Next Steps + Limitations (DISCUSSION)",
    "text": "Overall Results + Next Steps + Limitations (DISCUSSION)\n\nDanceability is not a great predictor for popularity when not faceted by genre.\nDanceability has different impacts on popularity when faceted by genre.\nDanceability has a positive and significant effect on popularity ratings of general, latin, and rap songs. This relationship varies\n\nRap has the highest coefficient\nGeneral has the lowest\n\nGeneral model had best fit according to AIC criteria (lowest mean squared error)\nThe interactive model for danceability * tempo * energy has lowest AIC\nThe additive and interactive models that included the energy variable had lower AIC values"
  }
]